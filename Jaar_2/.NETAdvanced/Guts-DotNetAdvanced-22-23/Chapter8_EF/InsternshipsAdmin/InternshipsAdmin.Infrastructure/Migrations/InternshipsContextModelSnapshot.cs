// <auto-generated />
using System;
using InternshipsAdmin.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternshipsAdmin.Infrastructure.Migrations
{
    [DbContext(typeof(InternshipsContext))]
    partial class InternshipsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InternshipsAdmin.Domain.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Address = "Elfde Liniestraat 26",
                            City = "Hasselt",
                            Name = "PXL Smart ICT",
                            Zip = "3500"
                        },
                        new
                        {
                            CompanyId = 2,
                            Address = "Kempische Steenweg 309",
                            City = "Hasselt",
                            Name = "Datasense",
                            Zip = "3500"
                        });
                });

            modelBuilder.Entity("InternshipsAdmin.Domain.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("InternshipsAdmin.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "9f3b6e7b-156f-4768-af77-57a85655fa7d",
                            Email = "fb7dadc9-c3e5-4220-8ca7-ab0be0e2e1f3",
                            Name = "Timmy",
                            Phone = "072e5512-4560-4f12-8577-ef07226bb031",
                            SupervisorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Department = "a38e8ddd-a050-4542-8486-c8367ed4a21a",
                            Email = "54d59410-92cc-4f14-b33e-3b397f0d84d9",
                            Name = "Phillip",
                            Phone = "d1ee4812-5615-45dc-a1ba-d8b3db97a61e",
                            SupervisorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Department = "4e0a5e82-88b4-45a3-b679-363e272e42cf",
                            Email = "3ee72a3a-f3fb-402d-a7a1-0a97f50ac77a",
                            Name = "Sofia",
                            Phone = "be9dd60f-a894-4b8c-a3ab-58638e216586",
                            SupervisorId = 2
                        },
                        new
                        {
                            Id = 4,
                            Department = "9ec86142-2f70-4213-a716-63b48cd61f21",
                            Email = "25dba5ab-f088-488c-a3e9-6ab144c2e655",
                            Name = "Sarah",
                            Phone = "a41527ee-85d4-496f-81bf-e5ed45637a1a",
                            SupervisorId = 2
                        });
                });

            modelBuilder.Entity("InternshipsAdmin.Domain.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialism")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Supervisors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Email = "227c5e6d-c636-4a37-ae45-6d608071bf17",
                            JobTitle = "e049ea2a-b6da-4276-b72a-3ae19fbe7123",
                            Name = "Paul",
                            Phone = "9de8960a-ab80-49c9-b059-53a448b62edd",
                            Specialism = "9695c4a7-6c37-4bf0-a6cc-ad7b58419629"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            Email = "03dddacf-b8e7-4ad1-b068-cd8e15aa0558",
                            JobTitle = "691fec68-1f52-4202-a690-e1baf5b640c7",
                            Name = "Tamara",
                            Phone = "5bcad13b-b7af-411e-b2e1-cfa55307b779",
                            Specialism = "b5bc64a4-391f-472f-81ac-dd5e0e99c979"
                        });
                });

            modelBuilder.Entity("InternshipsAdmin.Domain.Contact", b =>
                {
                    b.HasOne("InternshipsAdmin.Domain.Company", "Company")
                        .WithOne("Contact")
                        .HasForeignKey("InternshipsAdmin.Domain.Contact", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InternshipsAdmin.Domain.Student", b =>
                {
                    b.HasOne("InternshipsAdmin.Domain.Supervisor", "Supervisor")
                        .WithMany("Students")
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("InternshipsAdmin.Domain.Supervisor", b =>
                {
                    b.HasOne("InternshipsAdmin.Domain.Company", "Company")
                        .WithMany("Supervisors")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InternshipsAdmin.Domain.Company", b =>
                {
                    b.Navigation("Contact");

                    b.Navigation("Supervisors");
                });

            modelBuilder.Entity("InternshipsAdmin.Domain.Supervisor", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
