AWSTemplateFormatVersion: '2010-09-09'
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      Tags:
        - Key: Name
          Value: my-vpc

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.1.0/24'
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: subnet-1

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.2.0/24'
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-1b
      Tags:
        - Key: Name
          Value: subnet-2

  PublicSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.3.0/24'
      MapPublicIpOnLaunch: true     
      AvailabilityZone: us-east-1c
      Tags:
        - Key: Name
          Value: subnet-3

  PublicSubnet4:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.4.0/24'
      MapPublicIpOnLaunch: true     
      AvailabilityZone: us-east-1f
      Tags:
        - Key: Name
          Value: subnet-4

  PublicSubnet5:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.5.0/24'
      MapPublicIpOnLaunch: true     
      AvailabilityZone: us-east-1d
      Tags:
        - Key: Name
          Value: subnet-5          

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'

  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref "VPC"        

  RouteTable2:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref "VPC"        

      
  InternetRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  PublicSubnet3RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet3

  PublicSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable2
      SubnetId: !Ref PublicSubnet2

  PublicSubnet4RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet4

  PublicSubnet5RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet5         

  SecurityGroupLoadBalancer:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Allow HTTP and SSH traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  SecurityGroupApplication:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Application security group
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref SecurityGroupLoadBalancer
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0    

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: awesomeloadbalancer
      Type: application
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
        - !Ref PublicSubnet3        
        - !Ref PublicSubnet4
        - !Ref PublicSubnet5
      SecurityGroups:
        - !Ref SecurityGroupLoadBalancer
          
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            StatusCode: 404

  LoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: target-group-PE
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPC
      TargetType: instance
      Targets:
         - Id: !Ref EC2Instance2
         - Id: !Ref EC2Instance1
         - Id: !Ref EC2Instance4
         - Id: !Ref EC2Instance5         


          
  LoadBalancerListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Priority: 100
      Conditions:
        - Field: path-pattern
          Values:
            - "*"
      Actions:
        - Type: forward
          TargetGroupArn: !Ref LoadBalancerTargetGroup




  EC2Instance1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: ami-005f9685cb30f234b # Amazon Linux 2 AMI (HVM), SSD Volume Type
      KeyName: vockey
      SecurityGroupIds: 
      - !Ref SecurityGroupApplication
      SubnetId: !Ref PublicSubnet1
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install docker -y
          service docker start
          usermod -a -G docker ec2-user
          chkconfig docker on
          sudo yum install git -y
          sudo git clone https://github.com/PXL-2TIN-DevOps-Resources/Calculator-app.git /opt/Calculator
          cd /opt/Calculator
          echo "body { background-color: #0000FF; }" >> public/assets/style.css
          sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod -v +x /usr/local/bin/docker-compose
          docker-compose up -d

  EC2Instance2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: ami-005f9685cb30f234b # Amazon Linux 2 AMI (HVM), SSD Volume Type
      KeyName: vockey
      SecurityGroupIds: 
      - !Ref SecurityGroupApplication
      SubnetId: !Ref PublicSubnet2
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install docker -y
          service docker start
          usermod -a -G docker ec2-user
          chkconfig docker on
          sudo yum install git -y
          sudo git clone https://github.com/PXL-2TIN-DevOps-Resources/Calculator-app.git /opt/Calculator
          cd /opt/Calculator
          echo "body { background-color: #FF0000; }" >> public/assets/style.css
          sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod -v +x /usr/local/bin/docker-compose
          docker-compose up -d

  EC2Instance3:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: ami-005f9685cb30f234b # Amazon Linux 2 AMI (HVM), SSD Volume Type
      KeyName: vockey
      SecurityGroupIds: 
      - !Ref SecurityGroupApplication
      SubnetId: !Ref PublicSubnet3
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install docker -y
          service docker start
          usermod -a -G docker ec2-user
          chkconfig docker on
          sudo yum install git -y
          sudo git clone https://github.com/PXL-2TIN-DevOps-Resources/Calculator-app.git /opt/Calculator
          cd /opt/Calculator
          echo "body { background-color: #ebfc03; }" >> public/assets/style.css
          sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod -v +x /usr/local/bin/docker-compose
          docker-compose up -d        

  EC2Instance4:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: ami-005f9685cb30f234b # Amazon Linux 2 AMI (HVM), SSD Volume Type
      KeyName: vockey
      SecurityGroupIds: 
      - !Ref SecurityGroupApplication
      SubnetId: !Ref PublicSubnet4
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install docker -y
          service docker start
          usermod -a -G docker ec2-user
          chkconfig docker on
          sudo yum install git -y
          sudo git clone https://github.com/PXL-2TIN-DevOps-Resources/Calculator-app.git /opt/Calculator
          cd /opt/Calculator
          echo "body { background-color: #03fc1c; }" >> public/assets/style.css
          sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod -v +x /usr/local/bin/docker-compose
          docker-compose up -d        


  EC2Instance5:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: ami-005f9685cb30f234b # Amazon Linux 2 AMI (HVM), SSD Volume Type
      KeyName: vockey
      SubnetId: !Ref PublicSubnet5
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install docker -y
          service docker start
          usermod -a -G docker ec2-user
          chkconfig docker on
          sudo yum install git -y
          sudo git clone https://github.com/PXL-2TIN-DevOps-Resources/Calculator-app.git /opt/Calculator
          cd /opt/Calculator
          echo "body { background-color: #8003fc; }" >> public/assets/style.css
          sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod -v +x /usr/local/bin/docker-compose
          docker-compose up -d        
